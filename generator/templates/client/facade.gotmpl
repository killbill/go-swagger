// Code generated by go-swagger; DO NOT EDIT.


{{ if .Copyright -}}// {{ comment .Copyright -}}{{ end }}


package {{ .Package }}

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command


import (
  "net/http"
  "github.com/go-openapi/runtime"
  httptransport "github.com/go-openapi/runtime/client"
  "github.com/go-openapi/swag"
  "github.com/go-openapi/spec"
  "github.com/go-openapi/errors"
  "github.com/go-openapi/runtime"

  strfmt "github.com/go-openapi/strfmt"

  {{ range .DefaultImports }}{{ printf "%q" .}}
  {{ end }}
  {{ range $key, $value := .Imports }}{{ $key }} {{ printf "%q" $value }}
  {{ end }}
)

// New creates a new {{ humanize .Name }} client
// The following snippet provides creating killbill client with basic auth.
//
//
// 	   trp := httptransport.New("127.0.0.1:8080" /*host*/, "" /*basePath*/, nil /*schemes*/)
// 	   // Add missing handler. OpenAPI runtime doesn't have this by default
// 	   trp.Producers["text/xml"] = runtime.TextProducer()
// 	   // Set tro true to print http/debug logs
// 	   trp.Debug = enableDebug
// 	   // Setup basic auth
// 	   authWriter := httptransport.BasicAuth("admin", "password")
// 	   client := kbclient.New(trp, strfmt.Default)
//     // Use client
//     client.Accounts.GetAccount(...)
//
func New(transport runtime.ClientTransport,
         formats strfmt.Registry,
         authInfo runtime.ClientAuthInfoWriter,
         defaults KillbillDefaults) *{{ pascalize .Name }} {

  // ensure nullable parameters have default
  if formats == nil {
    formats = strfmt.Default
  }

  cli := &{{ pascalize .Name }}{
    Transport: transport,
    defaults: defaults,
  }
  {{ range .OperationGroups }}
  cli.{{ pascalize .Name }} = {{ .Name }}.New(transport, formats, authInfo, &cli.defaults)
  {{ end }}
  return cli
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
    Host string
    BasePath string
    Schemes []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
    cfg.Host = host
    return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
    cfg.BasePath = basePath
    return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
    cfg.Schemes = schemes
    return cfg
}

// {{ pascalize .Name }} is a client for {{ humanize .Name }}
type {{ pascalize .Name }} struct {
  {{ range .OperationGroups }}
  {{ pascalize .Name }} *{{ .Name }}.Client
  {{ end }}
  Transport runtime.ClientTransport
  defaults KillbillDefaults
}


// SetTransport changes the transport on the client and all its subresources
func (c *{{pascalize .Name}}) SetTransport(transport runtime.ClientTransport) {
  c.Transport = transport
  {{ range .OperationGroups }}
  c.{{ pascalize .Name }}.SetTransport(transport)
  {{ end }}
}

// Defaults returns killbill defaults
func (c *{{pascalize .Name}}) Defaults() KillbillDefaults {
  return c.defaults
}

// SetDefaults sets killbill defaults
func (c *{{pascalize .Name}}) SetDefaults(defaults KillbillDefaults) {
  c.defaults = defaults
}

// Implements killbill default values.
type KillbillDefaults struct {
  // XKillbillCreatedBy property
	CreatedBy *string
  // XKillbillComment property
	Comment   *string
  // XKillbillReason property
	Reason    *string
	// withProfilingInfo property
	WithProfilingInfo *string
  // withStackTrace property
  WithStackTrace *bool
}

// Default CreatedBy. If not set explicitly in params, this will be used.
func (d KillbillDefaults) XKillbillCreatedBy() *string {
	return d.CreatedBy
}

// Default Comment. If not set explicitly in params, this will be used.
func (d KillbillDefaults) XKillbillComment() *string {
	return d.Comment
}

// Default Reason. If not set explicitly in params, this will be used.
func (d KillbillDefaults) XKillbillReason() *string {
	return d.Reason
}

// Default WithProfilingInfo. If not set explicitly in params, this will be used.
func (d KillbillDefaults) KillbillWithProfilingInfo() *string {
	return d.WithProfilingInfo
}

// Default WithStackTrace. If not set explicitly in params, this will be used.
func (d KillbillDefaults) KillbillWithStackTrace() *bool {
	return d.WithStackTrace
}
